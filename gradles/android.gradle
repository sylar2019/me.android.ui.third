apply from: gradlesPath + 'const.gradle'
apply from: gradlesPath + 'utils.gradle'
apply plugin: 'maven'

if (isAndroidApp()) {
    apply plugin: "com.android.application"
} else if (isAndroid()) {
    apply plugin: "com.android.library"
}

configurations.all {
    resolutionStrategy {
        force "com.google.guava:guava:${guavaVersion}"
    }
}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar", "*.aar"])
}

/** ******************************************************************************************/

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
//        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        compileSdkVersion rootProject.ext.androidCompileSdkVersion
        versionCode 100
        versionName "1.0.0"
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}

/** ******************************************************************************************/
/** ******************************************************************************************/

uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = "$project.group"
            pom.artifactId = "$project.name"
            pom.version = "$project.version"

            def url = version.endsWith('SNAPSHOT') ? SNAPSHOT_REPOSITORY_URL : RELEASE_REPOSITORY_URL

            repository(url: url) {
                authentication(userName: nasNexusUser, password: nasNexusPwd)
            }
        }
    }
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}

/** ******************************************************************************************/
